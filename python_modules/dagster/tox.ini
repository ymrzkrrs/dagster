[tox]
envlist = py{38,37,36}-{unix,windows}-{api_tests,cli_tests,core_tests,daemon_tests,general_tests,scheduler_tests,scheduler_tests_old_pendulum},pylint,mypy

[testenv]
passenv = CI_* COVERALLS_REPO_TOKEN AWS_SECRET_ACCESS_KEY AWS_ACCESS_KEY_ID BUILDKITE DAGSTER_DOCKER_* GRPC_SERVER_HOST
setenv =
  !windows: COVERAGE_ARGS = --cov=dagster --cov-append --cov-report=
  windows: COVERAGE_ARGS =
deps =
  scheduler_tests_old_pendulum: pendulum==1.4.4
  -e .[test]
  -e ../dagster-test
usedevelop = true
whitelist_externals =
  /bin/bash
  echo
commands =
  !windows: /bin/bash -c '! pip list --exclude-editable | grep -e dagster -e dagit'
  coverage erase
  flake8 . --count --exclude=./.*,dagster/seven/__init__.py --select=E9,F63,F7,F82 --show-source --statistics
  echo -e "--- \033[0;32m:pytest: Running tox tests\033[0m"

  api_tests: pytest -vv ./dagster_tests/api_tests --junitxml=test_results.xml {env:COVERAGE_ARGS} --durations 10 {posargs}
  cli_tests: pytest -vv ./dagster_tests/cli_tests --junitxml=test_results.xml {env:COVERAGE_ARGS} --durations 10 {posargs}
  core_tests: pytest -vv ./dagster_tests/core_tests --junitxml=test_results.xml {env:COVERAGE_ARGS} --durations 10 {posargs}
  daemon_tests: pytest -vv ./dagster_tests/daemon_tests --junitxml=test_results.xml {env:COVERAGE_ARGS} --durations 10 {posargs}
  scheduler_tests: pytest -vv ./dagster_tests/scheduler_tests --junitxml=test_results.xml {env:COVERAGE_ARGS} --durations 10 {posargs}
  scheduler_tests_old_pendulum: pytest -vv ./dagster_tests/scheduler_tests --junitxml=test_results.xml {env:COVERAGE_ARGS} --durations 10  {posargs}
  general_tests: pytest -vv ./dagster_tests/general_tests --junitxml=test_results.xml {env:COVERAGE_ARGS} --durations 10  {posargs}
  execution_tests: pytest -vv ./dagster_tests/execution_tests --junitxml=test_results.xml {env:COVERAGE_ARGS} --durations 10  {posargs}

  !windows: coverage report --omit='.tox/*,**/test_*.py' --skip-covered
  !windows: coverage html --omit='.tox/*,**/test_*.py'
  !windows: coverage xml --omit='.tox/*,**/test_*.py'

[testenv:pylint]
whitelist_externals =
  pylint
basepython = python
commands =
  pylint -j 0 --rcfile=../../.pylintrc dagster
